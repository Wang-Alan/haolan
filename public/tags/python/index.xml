<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Haolan&#39;s Website</title>
    <link>/tags/python/</link>
    <description>Recent content in Python on Haolan&#39;s Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sun, 13 Dec 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ADCP数据处理3.0</title>
      <link>/post/adcp%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%863-0/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/adcp%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%863-0/</guid>
      <description>ADCP处理代码的2.0版本，存在以下问题：  编写时未考虑为MIKE11的一维水动力模型服务 仅考虑了一条河的情形，未考虑多条河的情况 受R语言和课题组已有代码的影响，数据输入输出主要以文本文件为主，其实EXCEL会是更好的选择 数据导入部分的算法过于复杂，从软件导出的数据也相对繁琐，这些都是可以简化的。  充分利用python模块 主要编写以下模块：
 类定义模块 仍然以section类为主，记录除了导入的原始结果外，增加计算结果。 通过继承方法，扩展类对象。 输入输出模块 将dataframe作为存储数据的主要表，不要用numpy array，numpy array应该在具体计算时使用 输入可以时多源的，输出excel和特定软件需求为主。 功能模块 要考虑可扩展性  </description>
    </item>
    
    <item>
      <title>python?大数据？</title>
      <link>/post/python/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/python/</guid>
      <description>python是一门有广度但是没有深度的语言，如果要做大数据处理，最好使用计算密集型语言，比如java、c、c#。python不属于计算密集型语言，设计之初有缺陷，有个所会导致python不能全方面支持并发和并行。
java虽然也属于计算密集型语言，但是毕竟是应用层的语言，效率普遍都比较低，相比之下，c、c++、c#效率奇高，性能完爆。
但是在应用层，如果要做大数据，java是主流，有两个主要的框架，天然的spark和hadoop。
服务端默认都是支持python的，对于运维而言，python是第一语言，web应用有个django框架，属于中等级别，ins就是这个框架写的。
所以学python值不值得呢？我也不知道，反正我是会用的。</description>
    </item>
    
    <item>
      <title>ADCP数据处理思路</title>
      <link>/post/adcp%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%80%9D%E8%B7%AF/</link>
      <pubDate>Sun, 08 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/adcp%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%80%9D%E8%B7%AF/</guid>
      <description>数据概况 ADCP会对选定河段的若干断面进行测量，每个断面是一个测次，每个测次由若干数据组组成，每个数据组都有唯一数据组序号（Ensemble Number），每个数据组对于任一变量含若干不等的数据，代表该变量不同深度的值。
我们常用的变量包括：
  水深 River Depth [m]
  平均流速 Mean River Velocity (Ref: BT) [m/s]
  速度
 东向速度 East Velocity (Ref: BT) [m/s] 北向速度 North Velocity (Ref: BT) [m/s] 垂向速度 East Up Velocity (Ref: BT) [m/s]    位置
 东向偏移量 East Displacement (Ref: BT) [m] 北向偏移量 North Displacement (Ref: BT) [m]    处理流程  用 WinRiverII 软件导出数据，每个测次每个变量会导出一个 txt 文件 把 txt 文件导入 python 处理数据并得出结果  包括：</description>
    </item>
    
  </channel>
</rss>