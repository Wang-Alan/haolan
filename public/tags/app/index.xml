<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>App on Haolan&#39;s Website</title>
    <link>/tags/app/</link>
    <description>Recent content in App on Haolan&#39;s Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Wed, 03 Feb 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/app/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>基于Vue和云构建简易的单页面应用</title>
      <link>/post/%E5%9F%BA%E4%BA%8Evue%E5%92%8C%E4%BA%91%E6%9E%84%E5%BB%BA%E7%AE%80%E6%98%93%E7%9A%84%E5%8D%95%E9%A1%B5%E9%9D%A2%E5%BA%94%E7%94%A8/</link>
      <pubDate>Wed, 03 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/%E5%9F%BA%E4%BA%8Evue%E5%92%8C%E4%BA%91%E6%9E%84%E5%BB%BA%E7%AE%80%E6%98%93%E7%9A%84%E5%8D%95%E9%A1%B5%E9%9D%A2%E5%BA%94%E7%94%A8/</guid>
      <description>前端发展 2009年之前，前端开发处于原始时代（IE8出现开发者模式） 2009年，node.js的出现标志前端进入现代化，同时确立前端工程师的岗位 2009年之后，出现许多打包工具、包管理工具等.
-大漠穷秋
node.js的出现在前端发展史上是具有里程碑意义的，基于node.js发展出的前端框架，例如Angular、Vue等，给前端工程师通过web技术快速开发应用提供了可能，同时，一定程度上促进了web应用的发展，降低了应用开发的门槛。
Vue开发 Vue框架的作者是尤雨溪，借鉴了MVVM的设计模式，是国内目前非常活的框架。
vue的核心概念 Vue的核心概念是组件，组件可以分为根组件和其他组件，其他组件与根组件一起组成组件树，构成整个应用，根组件与其他组件没什么不同，配置选项是一样的，所对应的组件实例行为也是一样的。
根组件实例要挂载在应用实例上，作为渲染的起点。
组件实例包括模板和js代码，模板主要是由html，js表达式，“Mustache”语法组成，代码主要包括组件实例的propery和生命周期钩子。
模板语法 vue的模板语法主要是插值和指令
插值具体包括文本、原始html、attribute和js表达式
指令包括参数和修饰符，常用指令有相应的缩写
组件通讯 组件间通讯，包括数据和事件。
数据一般只能从父组件传向子组件，若父子组件间“级数”较少，则采用prop的方法传递，相当于为子组件创建property；若父子组件间“级数”较多，则可以采用provide/inject的方法传递。
事件常为父组件监听子组件的事件，通过$emit方法实现。子组件需要触发父组件的事件，子组件内部没有相应的事件函数，“搜索范围”内找不到对应的事件，使用$emit，告知vue需要扩大搜索范围，就能找到相应的事件函数。另外，$emit方法可以抛出子组件的值给父组件。
单页面应用 组件本身，就足矣形成界面，但是若干界面如何组合在一起，需要引入路由和状态管理，vue官方也提供了相应的工具，同时，vue-cli也可以生成相应得模板，其中代码通过单文件组件组织在一起。
个人认为，vue特别厉害的一个思想是关注点分离并不意味着代码分离。将同一组件的html、css、js代码放在一个文件里，非常方便。
函数计算和数据库 大部分程序都是多层架构的程序，至少包括数据层、业务逻辑层和表示层，vue编写的仅是程序的表示层，可能会有一些简单的小计算，因此需要引入函数计算和数据库。
云技术是未来的趋势，阿里的函数计算和云数据库为完整app的开发提供了非常多的便利。以http作为触发器的函数计算，加上云存储，几乎可以实现所有应用。</description>
    </item>
    
  </channel>
</rss>