<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Haolan&#39;s Website</title>
    <link>/</link>
    <description>Recent content on Haolan&#39;s Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sat, 20 Oct 2018 20:57:00 -0700</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>python?大数据？</title>
      <link>/post/python/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/python/</guid>
      <description>python是一门有广度但是没有深度的语言，如果要做大数据处理，最好使用计算密集型语言，比如java、c、c#。python不属于计算密集型语言，设计之初有缺陷，有个所会导致python不能全方面支持并发和并行。
java虽然也属于计算密集型语言，但是毕竟是应用层的语言，效率普遍都比较低，相比之下，c、c++、c#效率奇高，性能完爆。
但是在应用层，如果要做大数据，java是主流，有两个主要的框架，天然的spark和hadoop。
服务端默认都是支持python的，对于运维而言，python是第一语言，web应用有个django框架，属于中等级别，ins就是这个框架写的。
所以学python值不值得呢？我也不知道，反正我是会用的。</description>
    </item>
    
    <item>
      <title>为什么要把 R 代码写在 R markdown 上</title>
      <link>/post/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E6%8A%8A-r-%E4%BB%A3%E7%A0%81%E5%86%99%E5%9C%A8-r-markdown-%E4%B8%8A/</link>
      <pubDate>Mon, 16 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E6%8A%8A-r-%E4%BB%A3%E7%A0%81%E5%86%99%E5%9C%A8-r-markdown-%E4%B8%8A/</guid>
      <description>R 代码原来写在哪里？  R 代码最常见的是写在脚本（.r）里，文字可以通过注释加在脚本的字里行间。但是存在一些问题：
  在数据分析中，注释通常会涉及公式，在脚本中无法呈现
  如果与他人交流数据分析过程，将代码与输出结果对应，沟通交流会很高效
  数据分析过程中对代码参数修改过多，如果不做好记录，很容易忘记一些重要的细节
  数据分析通常需要保存中间步骤的输出结果
  于是 jupyter notebook 被开发出来了。最开始的 jupyter notebook 是给 python 语言开发的，现在也广泛的被数据分析师应用。但是最开始的 jupyter notebook 是在浏览器中运行的，浏览器中的 jupyter notebook 使用中有一些弊端，比如代码开发、调试等开发过程对 IDE 的使用频率非常高，将 jupyter notebook 放在浏览器运行会导致很多额外的步骤。
为什么使用 R markdown  目前，它被整合进了 VS code - 非常有些的IDE -弊端也逐渐消失。而 VS code 下的 jupyter notebook 并不支持 R 语言，而 R 语言原生的与 jupyter notebook 对应的，便是 R markdown。
此外，R markdown 相比于 jupyter notebook 还有额外的优势，包括：</description>
    </item>
    
    <item>
      <title>ADCP数据处理思路</title>
      <link>/post/adcp%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%80%9D%E8%B7%AF/</link>
      <pubDate>Sun, 08 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/adcp%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%80%9D%E8%B7%AF/</guid>
      <description>数据概况 ADCP会对选定河段的若干断面进行测量，每个断面是一个测次，每个测次由若干数据组组成，每个数据组都有唯一数据组序号（Ensemble Number），每个数据组对于任一变量含若干不等的数据，代表该变量不同深度的值。
我们常用的变量包括：
  水深 River Depth [m]
  平均流速 Mean River Velocity (Ref: BT) [m/s]
  速度
 东向速度 East Velocity (Ref: BT) [m/s] 北向速度 North Velocity (Ref: BT) [m/s] 垂向速度 East Up Velocity (Ref: BT) [m/s]    位置
 东向偏移量 East Displacement (Ref: BT) [m] 北向偏移量 North Displacement (Ref: BT) [m]    处理流程  用 WinRiverII 软件导出数据，每个测次每个变量会导出一个 txt 文件 把 txt 文件导入 python 处理数据并得出结果  包括：</description>
    </item>
    
    <item>
      <title>git 学习笔记</title>
      <link>/post/git-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/git-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>说明：
 git 只能追踪文本文件的修改，如代码、md文件等，不能追踪二进制文件修改，如word 以下仅是我会用到的一些常见命令，更多信息可以参考廖雪峰 git 教程和git 使用简易指南   创建版本库 git init把一个文件放进 git 仓库 git add &amp;lt;文件名&amp;gt;例如
git add file1.txtgit add file2.txt file3.txtgit add .git commit -m &amp;lt;message&amp;gt;例如
git commit -m &amp;#34;add file&amp;#34;git commit -m &amp;#34;modify files&amp;#34;git 工作流 查看仓库当前状态 git status查看具体修改内容 git diff &amp;lt;文件名&amp;gt;例如
git diff file.txt查看历史记录 git log git log --pretty=oneline退回到历史版本 前一版
git reset --hard HEAD^前二版</description>
    </item>
    
    <item>
      <title>R语言基础——数据</title>
      <link>/post/r%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/r%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE/</guid>
      <description>提纲1. 如何读取数据2. 如何写入数据3. 数据格式与转化4. 数据框`data.frame`操作5. 当前工作目录1. 如何读取数据最基础函数 read.table()read.table(file, header = FALSE, sep =&amp;quot;&amp;quot;, quote = &amp;quot;\&amp;quot;&amp;#39;&amp;quot;, dec = &amp;quot;.&amp;quot;, row.names, col.names, as.is = !stringsAsFactors, na.strings = &amp;quot;NA&amp;quot;, colClasses = NA, nrows= -1, skip = 0, check.names = TRUE, fill =!blank.lines.skip, strip.white = FALSE, blank.lines.skip =TRUE, comment.char = &amp;quot;#&amp;quot;, allowEscapes = FALSE, flush =FALSE, stringsAsFactors =default.stringsAsFactors(), fileEncoding = &amp;quot;&amp;quot;, encoding = &amp;quot;unknown&amp;quot;, text）参数解释：</description>
    </item>
    
    <item>
      <title>™的爱情啊~</title>
      <link>/post/%E7%9A%84%E7%88%B1%E6%83%85%E5%95%8A/</link>
      <pubDate>Fri, 07 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/%E7%9A%84%E7%88%B1%E6%83%85%E5%95%8A/</guid>
      <description>我闹了好久才发现我爱的是以前的你，而我对现在的你好像没有一点好感，我放不下的是那段感情，不是你
朱茵说：“如果一个人真的爱你，你是走不掉也跑不了的，除非她有意放你走，你还有什么不明白不甘心的
哪天想起我也请你记得 当时我很喜欢你是真的 那些眼泪是真的 想和你有个未来也是真的
你只看见我的无理取闹 刁蛮任性 我深夜里哭的喘不出气 看不见我每次等你消息满眼的失望 看不见我爱你的时候
面无表情的擦肩而过都是装的 但回头看你是真的
想知道那些谈了两三年恋爱分了是怎么熬过来的
我把为你伤心的时刻都记录下来了 在我想起你的时候反复观看 生怕自己一个不小心又坠入你温柔陷阱</description>
    </item>
    
    <item>
      <title>我要为自由高歌</title>
      <link>/post/%E6%88%91%E8%A6%81%E4%B8%BA%E8%87%AA%E7%94%B1%E9%AB%98%E6%AD%8C/</link>
      <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/%E6%88%91%E8%A6%81%E4%B8%BA%E8%87%AA%E7%94%B1%E9%AB%98%E6%AD%8C/</guid>
      <description>只有当丧失自由的时候，才能感受到自由的可贵。</description>
    </item>
    
    <item>
      <title>年终总结</title>
      <link>/post/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sat, 11 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</guid>
      <description>以上，是做年终总结PPT之前的一个提纲式总结。</description>
    </item>
    
    <item>
      <title>新年快乐</title>
      <link>/post/%E6%96%B0%E5%B9%B4%E5%BF%AB%E4%B9%90/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/%E6%96%B0%E5%B9%B4%E5%BF%AB%E4%B9%90/</guid>
      <description>2019年，看成果其实还挺好的
论文两篇，一篇Water Research，一篇Desalination and Water Treatment 其实我还有一篇帮别人投的，也中了
11月15日 Water Research中；11月19日 Envoronmental science processes and impacts中，四天两篇，爽嗷
文章写完之后，尤其是文章返修阶段，非常痛苦，当时觉得可能是因为没有自己的时间，现在看来，这不是痛苦的根本原因
在2019年的最后一个月，受益于高人的指点，化解了我心中的不忿，从此可以开心，至少不痛苦，的科研了</description>
    </item>
    
    <item>
      <title>良心推荐</title>
      <link>/post/%E8%89%AF%E5%BF%83%E6%8E%A8%E8%8D%90/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/%E8%89%AF%E5%BF%83%E6%8E%A8%E8%8D%90/</guid>
      <description>MS软件激活工具包，绝对是良心中的良心！ 这么多年，我们一直用它！ 亦是美网络</description>
    </item>
    
  </channel>
</rss>